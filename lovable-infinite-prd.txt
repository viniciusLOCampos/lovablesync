# PRD - GitHub Repository Sync Tool (One-Click Solution)

## 1. Vis√£o Geral do Produto

### Objetivo Principal
Criar uma aplica√ß√£o desktop que **replique EXATAMENTE** a funcionalidade dos workflows n8n apresentados, permitindo sincroniza√ß√£o completa de m√∫ltiplos reposit√≥rios GitHub com **UM √öNICO CLIQUE**.

### Problema Espec√≠fico
- Os workflows n8n fazem: **DELETE COMPLETO** ‚Üí **COPY COMPLETO** entre reposit√≥rios
- Necessidade de executar essa opera√ß√£o em **m√∫ltiplos pares de reposit√≥rios simultaneamente**
- Interface visual para gerenciar e executar todas as sincroniza√ß√µes de uma vez

### Resultado Esperado
**UM CLIQUE = SINCRONIZA√á√ÉO TOTAL** de todos os reposit√≥rios configurados

## 2. Funcionalidades Core (Essenciais)

### 2.1 Funcionalidade Principal: "SYNC ALL" 
```
[üöÄ SINCRONIZAR TODOS]
‚Üì
Para cada reposit√≥rio configurado:
1. DELETE: Apagar TUDO do reposit√≥rio destino
2. COPY: Copiar TUDO do reposit√≥rio origem
3. LOG: Registrar resultado
```

### 2.2 Gest√£o de Configura√ß√µes
- **Adicionar** pares origem ‚Üí destino
- **Listar** todas as configura√ß√µes
- **Habilitar/Desabilitar** configura√ß√µes espec√≠ficas
- **Validar** reposit√≥rios (exist√™ncia e permiss√µes)

### 2.3 Monitoramento em Tempo Real
- **Progress bar** global e por reposit√≥rio
- **Status** de cada opera√ß√£o em andamento
- **Logs** detalhados de cada a√ß√£o

## 3. Replica√ß√£o Exata do Comportamento n8n

### 3.1 Algoritmo Principal (Baseado no workflow)
```python
async def sync_all_repositories():
    """Replica EXATAMENTE o comportamento do n8n"""
    
    for config in enabled_configurations:
        # FASE 1: CLEANUP (igual ao workflow delete)
        target_files = github.list_all_files(config.target_repo)
        
        for file_item in target_files:
            if file_item.type == "file":
                github.delete_file(config.target_repo, file_item.path)
            elif file_item.type == "directory":
                await delete_directory_recursive(config.target_repo, file_item.path)
        
        # FASE 2: COPY (igual ao workflow create)  
        source_files = github.list_all_files(config.source_repo)
        
        for file_item in source_files:
            if file_item.type == "file":
                content = github.get_file(config.source_repo, file_item.path)
                github.create_file(config.target_repo, file_item.path, content)
            elif file_item.type == "directory":
                await copy_directory_recursive(config.source_repo, config.target_repo, file_item.path)
```

### 3.2 Opera√ß√µes Recursivas (Igual aos sub-workflows)

#### Delete Recursivo
```python
async def delete_directory_recursive(repo, path):
    """Replica o sub-workflow 'sub-pastas_github(delete)'"""
    
    directory_contents = github.list_files(repo, path)
    
    for item in directory_contents:
        if item.type == "file":
            github.delete_file(repo, item.path)
        elif item.type == "directory":
            # Chamada recursiva (igual ao Execute Workflow no n8n)
            await delete_directory_recursive(repo, item.path)
```

#### Copy Recursivo
```python
async def copy_directory_recursive(source_repo, target_repo, path):
    """Replica o sub-workflow 'sub-pastas_github(create)'"""
    
    directory_contents = github.list_files(source_repo, path)
    
    for item in directory_contents:
        if item.type == "file":
            content = github.get_file(source_repo, item.path)
            github.create_file(target_repo, item.path, content)
        elif item.type == "directory":
            # Chamada recursiva (igual ao Execute Workflow no n8n)
            await copy_directory_recursive(source_repo, target_repo, item.path)
```

## 4. Interface do Usu√°rio (Minimalista)

### 4.1 Tela Principal - Foco Total no One-Click
```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ GitHub Repository Sync Tool                                 ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                             ‚îÇ
‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
‚îÇ ‚îÇ ‚òë Projeto A: user/repo-v1 ‚Üí user/repo-v2               ‚îÇ ‚îÇ
‚îÇ ‚îÇ ‚òë Projeto B: user/old-api ‚Üí user/new-api               ‚îÇ ‚îÇ  
‚îÇ ‚îÇ ‚òê Projeto C: user/legacy ‚Üí user/modern   [Desabilitado]‚îÇ ‚îÇ
‚îÇ ‚îÇ ‚òë Projeto D: user/backup ‚Üí user/main                   ‚îÇ ‚îÇ
‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ [+ Adicionar]  [‚úèÔ∏è Editar]  [üóëÔ∏è Remover]  [‚öôÔ∏è Config]        ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
‚îÇ ‚îÇ            üöÄ SINCRONIZAR TODOS                         ‚îÇ ‚îÇ
‚îÇ ‚îÇ          [Executar Sync Completo]                       ‚îÇ ‚îÇ
‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ Status: Pronto ‚Ä¢ 3 reposit√≥rios ativos                     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

### 4.2 Tela de Progresso (Durante Execu√ß√£o - Organizada por Projeto)
```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Sincroniza√ß√£o em Andamento...                              ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                             ‚îÇ
‚îÇ Progresso Geral: ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë 75% (3/4 projetos)            ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ üìÅ PROJETO: Website Redesign                               ‚îÇ
‚îÇ ‚úÖ 1/3: user/site-v1 ‚Üí user/site-v2 (2.3s) 45‚Üí48 arqs    ‚îÇ
‚îÇ ‚úÖ 2/3: user/site-v2 ‚Üí user/site-v3 (1.8s) 23‚Üí25 arqs    ‚îÇ
‚îÇ üîÑ 3/3: user/site-v3 ‚Üí user/prod (34/67 arquivos...)      ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ üìÅ PROJETO: API Migration                                  ‚îÇ
‚îÇ ‚úÖ 1/2: company/old-api ‚Üí company/new-api (3.1s)          ‚îÇ
‚îÇ ‚è≥ 2/2: company/api-docs ‚Üí company/new-docs (na fila...)  ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ Opera√ß√£o Atual: [Website Redesign] Copiando /src/components/Header.jsx ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ [‚ùå Cancelar] [üìÑ Ver Logs Detalhados] [‚è∏Ô∏è Pausar Projeto] ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

## 5. Arquitetura T√©cnica Focada na Funcionalidade

### 5.1 Stack Tecnol√≥gico
- **Python 3.9+** (linguagem principal)
- **PyGithub** (API GitHub oficial)
- **Tkinter** (interface gr√°fica nativa)
- **asyncio** (opera√ß√µes ass√≠ncronas)
- **threading** (UI responsiva)

### 5.2 Estrutura de C√≥digo Simplificada
```
github_sync_tool/
‚îú‚îÄ‚îÄ main.py                 # Entry point + GUI hier√°rquica
‚îú‚îÄ‚îÄ github_syncer.py        # L√≥gica de sincroniza√ß√£o (core)
‚îú‚îÄ‚îÄ config_manager.py       # Gerenciar contas/projetos/repos
‚îú‚îÄ‚îÄ models.py               # GitHubAccount, Project, SyncConfig
‚îú‚îÄ‚îÄ requirements.txt        # Depend√™ncias
‚îú‚îÄ‚îÄ accounts.json          # Configura√ß√£o da conta GitHub
‚îú‚îÄ‚îÄ projects.json          # Configura√ß√£o de projetos e reposit√≥rios
‚îî‚îÄ‚îÄ logs/                  # Logs organizados por execu√ß√£o
```

### 5.3 Classes Principais
```python
# Classe CORE - Replica o comportamento n8n
class GitHubSyncer:
    async def sync_all_repositories(configs: List[SyncConfig]) -> List[SyncResult]
    async def sync_single_repository(source: str, target: str) -> SyncResult
    async def delete_all_files(repo: str) -> int
    async def copy_all_files(source: str, target: str) -> int
    async def delete_directory_recursive(repo: str, path: str)
    async def copy_directory_recursive(source: str, target: str, path: str)

# Interface gr√°fica minimalista
class MainWindow:
    def setup_ui()                      # Interface principal
    def on_sync_all_clicked()          # Handler do bot√£o principal
    def show_progress_window()         # Janela de progresso
    def add_sync_configuration()       # Adicionar novo par origem‚Üídestino
```

## 6. Comportamento Detalhado do "One-Click"

### 6.1 Quando Usu√°rio Clica "SINCRONIZAR TODOS"
```python
def on_sync_all_clicked(self):
    # 1. CONFIRMA√á√ÉO DETALHADA
    active_projects = [p for p in self.projects if p.enabled]
    total_repos = sum(len([r for r in p.repositories if r.enabled]) for p in active_projects)
    
    message = f"""
    Isso ir√° executar:
    ‚Ä¢ {len(active_projects)} projetos ativos
    ‚Ä¢ {total_repos} sincroniza√ß√µes de reposit√≥rios
    ‚Ä¢ DELETAR TUDO dos reposit√≥rios destino
    ‚Ä¢ COPIAR TUDO dos reposit√≥rios origem
    
    Continuar?"""
    
    if not messagebox.askyesno("Confirmar Sincroniza√ß√£o Completa", message):
        return
    
    # 2. VALIDA√á√ïES PR√âVIAS
    if not self.github_account.validated:
        messagebox.showerror("Token inv√°lido")
        return
    
    # 3. EXECUTAR POR PROJETO (mantendo ordem)
    self.show_progress_window()
    threading.Thread(target=self.run_sync_all_projects).start()

async def run_sync_all_projects(self):
    """Executa sincroniza√ß√£o de todos os projetos"""
    syncer = GitHubSyncer(self.github_account.token)
    
    for project in self.projects:
        if project.enabled:
            # Executar reposit√≥rios NA ORDEM configurada
            ordered_repos = sorted(project.repositories, key=lambda r: r.order)
            enabled_repos = [r for r in ordered_repos if r.enabled]
            
            for repo_config in enabled_repos:
                result = await syncer.sync_single_repository(
                    repo_config.source_repo, 
                    repo_config.target_repo
                )
                self.update_progress(project.name, repo_config, result)
```

### 6.2 Execu√ß√£o Paralela/Sequencial
```python
# OP√á√ÉO 1: Sequencial (mais seguro para rate limits)
for config in configs:
    result = await self.sync_single_repository(config)
    results.append(result)
    self.update_progress(config.name, result)

# OP√á√ÉO 2: Paralela (mais r√°pida, mas cuidado com rate limits)
tasks = [self.sync_single_repository(config) for config in configs]
results = await asyncio.gather(*tasks, return_exceptions=True)
```

## 7. Configura√ß√£o e Setup (Estrutura Hier√°rquica)

### 7.1 Modelo de Organiza√ß√£o
```
CONTA GITHUB
‚îú‚îÄ‚îÄ TOKEN (configura√ß√£o √∫nica)
‚îú‚îÄ‚îÄ PROJETO A
‚îÇ   ‚îú‚îÄ‚îÄ reposit√≥rio-1 ‚Üí reposit√≥rio-2
‚îÇ   ‚îú‚îÄ‚îÄ reposit√≥rio-2 ‚Üí reposit√≥rio-3  
‚îÇ   ‚îî‚îÄ‚îÄ reposit√≥rio-3 ‚Üí reposit√≥rio-4
‚îú‚îÄ‚îÄ PROJETO B
‚îÇ   ‚îú‚îÄ‚îÄ old-api ‚Üí new-api
‚îÇ   ‚îî‚îÄ‚îÄ backup ‚Üí production
‚îî‚îÄ‚îÄ PROJETO C
    ‚îú‚îÄ‚îÄ legacy ‚Üí modern
    ‚îú‚îÄ‚îÄ dev ‚Üí staging
    ‚îî‚îÄ‚îÄ staging ‚Üí production
```

### 7.2 Configura√ß√£o Inicial (Primeira Execu√ß√£o)
1. **GitHub Token**: Usu√°rio configura token √∫nico (com permiss√µes repo)
2. **Valida√ß√£o**: Token √© testado contra API GitHub
3. **Interface**: Tela principal √© exibida para gest√£o de projetos

### 7.3 Gest√£o de Projetos e Reposit√≥rios

#### 7.3.1 Interface Hier√°rquica
```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ GitHub Repository Sync Tool                                 ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ Token: github_pat_11A... [‚úèÔ∏è Alterar]                       ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                             ‚îÇ
‚îÇ üìÅ PROJETO: Website Redesign                               ‚îÇ
‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
‚îÇ ‚îÇ 1. ‚òë user/website-v1 ‚Üí user/website-v2                 ‚îÇ ‚îÇ
‚îÇ ‚îÇ 2. ‚òë user/website-v2 ‚Üí user/website-v3                 ‚îÇ ‚îÇ  
‚îÇ ‚îÇ 3. ‚òê user/website-v3 ‚Üí user/website-prod [Desabilitado]‚îÇ ‚îÇ
‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ üìÅ PROJETO: API Migration                                  ‚îÇ
‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
‚îÇ ‚îÇ 1. ‚òë company/old-api ‚Üí company/new-api                 ‚îÇ ‚îÇ
‚îÇ ‚îÇ 2. ‚òë company/api-docs ‚Üí company/new-docs               ‚îÇ ‚îÇ
‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ [+ Novo Projeto] [‚úèÔ∏è Editar Projeto] [üóëÔ∏è Remover Projeto]   ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
‚îÇ ‚îÇ            üöÄ SINCRONIZAR TODOS                         ‚îÇ ‚îÇ
‚îÇ ‚îÇ       [Executar Todos os Projetos Ativos]              ‚îÇ ‚îÇ
‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ Status: 2 projetos ‚Ä¢ 5 reposit√≥rios ativos                 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

#### 7.3.2 Dialog: Criar/Editar Projeto
```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Configurar Projeto                          ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ Nome do Projeto: [Website Redesign____]     ‚îÇ
‚îÇ                                             ‚îÇ
‚îÇ Reposit√≥rios (Ordem de Execu√ß√£o):          ‚îÇ
‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
‚îÇ ‚îÇ 1. [user/site-v1___] ‚Üí [user/site-v2_] ‚îÇ ‚îÇ
‚îÇ ‚îÇ 2. [user/site-v2___] ‚Üí [user/site-v3_] ‚îÇ ‚îÇ
‚îÇ ‚îÇ 3. [user/site-v3___] ‚Üí [user/prod___] ‚îÇ ‚îÇ
‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
‚îÇ                                             ‚îÇ
‚îÇ [+ Adicionar Repo] [‚Üë‚Üì Reordenar] [üóëÔ∏è Remover] ‚îÇ
‚îÇ                                             ‚îÇ
‚îÇ [Testar Todos] [Cancelar] [Salvar]         ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

#### 7.3.3 Dialog: Adicionar Reposit√≥rio
```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Adicionar Reposit√≥rio ao Projeto‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ Origem:  [user/repo-source___]  ‚îÇ
‚îÇ Destino: [user/repo-target___]  ‚îÇ
‚îÇ                                 ‚îÇ
‚îÇ ‚òë Ativo                         ‚îÇ
‚îÇ                                 ‚îÇ
‚îÇ Posi√ß√£o na ordem:               ‚îÇ
‚îÇ ‚óã No final                      ‚îÇ
‚îÇ ‚óã Posi√ß√£o espec√≠fica: [3_]      ‚îÇ
‚îÇ                                 ‚îÇ
‚îÇ [Testar Acesso] [Cancelar] [OK] ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

### 7.4 Configura√ß√µes Manuais Obrigat√≥rias

#### 7.4.1 GitHub Token (N√≠vel Conta)
- **Configura√ß√£o √∫nica** por conta GitHub
- **Permiss√µes necess√°rias**: repo (full control)
- **Valida√ß√£o**: Testar acesso antes de salvar
- **Altera√ß√£o**: Poss√≠vel a qualquer momento

#### 7.4.2 Nome do Projeto (N√≠vel Projeto)
- **Defini√ß√£o manual**: Usu√°rio nomeia cada projeto
- **Exemplos**: "Website Redesign", "API Migration", "Database Update"
- **Fun√ß√£o**: Organizar e agrupar sincroniza√ß√µes relacionadas

#### 7.4.3 Reposit√≥rios (N√≠vel Sincroniza√ß√£o)
- **Origem/Destino**: Usu√°rio digita manualmente (formato: user/repo)
- **Valida√ß√£o**: Verificar exist√™ncia e permiss√µes
- **Formato obrigat√≥rio**: "username/repository-name"

#### 7.4.4 Ordem de Execu√ß√£o (N√≠vel Projeto)
- **Controle manual**: Usu√°rio define sequ√™ncia exata
- **Import√¢ncia cr√≠tica**: Ordem pode afetar depend√™ncias
- **Interface**: Drag-and-drop ou bot√µes ‚Üë‚Üì
- **Execu√ß√£o**: Sempre sequencial dentro do projeto

### 7.3 Valida√ß√£o de Reposit√≥rios
- Verificar se reposit√≥rios existem
- Verificar permiss√µes de leitura (origem)  
- Verificar permiss√µes de escrita (destino)
- Alertar sobre reposit√≥rios grandes (>1000 arquivos)

## 8. Tratamento de Erros e Edge Cases

### 8.1 Cen√°rios de Erro
- **Rate Limiting**: Implementar delays autom√°ticos
- **Reposit√≥rio n√£o encontrado**: Pular e continuar
- **Sem permiss√£o**: Pular e continuar  
- **Falha de rede**: Retry autom√°tico (3x)
- **Reposit√≥rio muito grande**: Aviso antes de executar

### 8.2 Recovery e Rollback
- **Log completo** de todas as opera√ß√µes
- **N√£o h√° rollback** (opera√ß√£o destrutiva por design)
- **Confirma√ß√£o clara** antes da execu√ß√£o

## 9. Crit√©rios de Aceita√ß√£o (One-Click Focus)

### ‚úÖ Funcionalidades Obrigat√≥rias (Atualizado para Estrutura Hier√°rquica)
- [ ] **Configura√ß√£o Manual Obrigat√≥ria**:
  - [ ] GitHub Token (√∫nica por conta)
  - [ ] Nome dos Projetos (manual)
  - [ ] Nome dos Reposit√≥rios (formato user/repo manual)
  - [ ] Ordem de execu√ß√£o dos reposit√≥rios (manual)
- [ ] **One-Click Sync**: Um bot√£o executa todos os projetos
- [ ] **Replica n8n 100%**: DELETE total + COPY total
- [ ] **M√∫ltiplos projetos**: Processa hierarquia completa
- [ ] **Ordem respeitada**: Executa reposit√≥rios na sequ√™ncia configurada
- [ ] **Progress hier√°rquico**: Mostra progresso por projeto e repo
- [ ] **Tratamento de pastas**: Recurs√£o igual aos sub-workflows
- [ ] **Rate limiting**: N√£o quebra limites da API GitHub

### ‚ö†Ô∏è Comportamentos Cr√≠ticos (Atualizados)
- **SEMPRE confirmar** mostrando quantos projetos/repos ser√£o processados
- **SEMPRE respeitar** a ordem configurada manualmente
- **SEMPRE executar** sequencialmente dentro de cada projeto
- **SEMPRE validar** token e reposit√≥rios antes da execu√ß√£o
- **NUNCA alterar ordem** automaticamente - apenas manual

### üìä M√©tricas de Performance
- **Tempo m√©dio**: < 2min para reposit√≥rios pequenos (<100 arquivos)
- **Taxa de sucesso**: > 95% em condi√ß√µes normais
- **UI responsiva**: Nunca travar durante execu√ß√£o
- **Memory usage**: < 500MB mesmo com reposit√≥rios grandes

## 10. Fluxo de Desenvolvimento

### Sprint 1: Core Engine
- [ ] Implementar `GitHubSyncer` class
- [ ] Algoritmo de DELETE recursivo
- [ ] Algoritmo de COPY recursivo  
- [ ] Testes com reposit√≥rios pequenos

### Sprint 2: Interface One-Click
- [ ] Interface principal
- [ ] Bot√£o "SINCRONIZAR TODOS"
- [ ] Progress window
- [ ] Configura√ß√£o de reposit√≥rios

### Sprint 3: Produ√ß√£o
- [ ] Tratamento de erros
- [ ] Rate limiting
- [ ] Valida√ß√µes
- [ ] Testes finais

## 11. Depend√™ncias M√≠nimas

```txt
PyGithub>=1.59.0    # API GitHub oficial
asyncio             # Opera√ß√µes ass√≠ncronas (built-in)
tkinter             # Interface gr√°fica (built-in)
threading           # UI responsiva (built-in)
json                # Configura√ß√µes (built-in)
```

## 12. Defini√ß√£o de "Pronto"

### ‚úÖ O produto est√° pronto quando:
1. **Um clique** executa sincroniza√ß√£o de todos os reposit√≥rios configurados
2. **Comportamento id√™ntico** aos workflows n8n apresentados
3. **Interface visual** mostra progresso em tempo real
4. **Zero perda de dados** (confirma√ß√µes e logs)
5. **Funciona offline** ap√≥s configura√ß√£o inicial

### üéØ Sucesso = Usu√°rio diz:
*"Cliquei uma vez e todos os meus 10 reposit√≥rios foram sincronizados perfeitamente, igual ao n8n, mas muito mais f√°cil!"*